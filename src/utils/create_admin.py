import asyncio
from sqlalchemy import select
from src.models import User
from src.core.settings import settings
from src.core.dependencies import get_session
from src.core.security import get_password_hash


async def create_admin():
    # –ø–æ–ª—É—á–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Å–µ—Å—Å–∏—é –∏–∑ get_session()
    session_gen = get_session()
    session = await anext(session_gen)   # –±–µ—Ä—ë–º –ø–µ—Ä–≤—ã–π yield

    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∞–¥–º–∏–Ω
        result = await session.execute(select(User).where(User.username == settings.admin_username))
        admin = result.scalar_one_or_none()

        if admin:
            print("‚úÖ Admin already exists")
            return

        # –°–æ–∑–¥–∞—ë–º –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∞
        hashed_pw = get_password_hash(settings.admin_password)
        admin = User(
            username=settings.admin_username,
            hashed_password=hashed_pw,
            is_admin=True,
        )
        session.add(admin)
        await session.commit()
        print("üéâ Admin user created")
    finally:
        # –∑–∞–∫—Ä—ã–≤–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä (—á—Ç–æ–±—ã —Å–µ—Å—Å–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–∫—Ä—ã–ª–∞—Å—å)
        await session_gen.aclose()


if __name__ == "__main__":
    asyncio.run(create_admin())
